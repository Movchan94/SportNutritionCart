{"ast":null,"code":"var _jsxFileName = \"D:\\\\IT\\\\shop\\\\shop\\\\src\\\\App.js\";\nimport React from 'react';\nimport styles from './App.module.css';\nimport axios from \"axios\";\nimport { Card } from \"semantic-ui-react\";\nimport ProductCard from \"./Components/Basket/BasketContainer\";\nimport Preloader from \"./Common/Preloader/Preloader\";\nimport Header from \"./Components/Header/Header\";\n\nclass App extends React.Component {\n  componentWillMount() {\n    axios.get('/productsJson.json').then(({\n      data\n    }) => {\n      this.props.setProducts(data);\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          products = _this$props.products,\n          isLoading = _this$props.isLoading;\n    return React.createElement(\"div\", {\n      className: styles.appWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.appArticle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      itemsPerRow: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, !isLoading ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }) : products.map((product, i) => React.createElement(ProductCard, Object.assign({\n      className: styles.ProductCard,\n      key: i\n    }, product, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/IT/shop/shop/src/App.js"],"names":["React","styles","axios","Card","ProductCard","Preloader","Header","App","Component","componentWillMount","get","then","data","props","setProducts","render","products","isLoading","appWrapper","appArticle","map","product","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAGA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAC9BC,EAAAA,kBAAkB,GAAG;AACjBP,IAAAA,KAAK,CAACQ,GAAN,CAAU,oBAAV,EAAgCC,IAAhC,CAAqC,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAY;AAC7C,WAAKC,KAAL,CAAWC,WAAX,CAAuBF,IAAvB;AACH,KAFD;AAGH;;AAEDG,EAAAA,MAAM,GAAG;AAAA,wBACyB,KAAKF,KAD9B;AAAA,UACEG,QADF,eACEA,QADF;AAAA,UACYC,SADZ,eACYA,SADZ;AAGL,WACI;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACiB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAEjB,MAAM,CAACkB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,WAAW,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACF,SAAD,GACK,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,GAEKD,QAAQ,CAACI,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KAAgB,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAErB,MAAM,CAACG,WAA/B;AACa,MAAA,GAAG,EAAEkB;AADlB,OACyBD,OADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA7B,CAHV,CADJ,CAFJ,CADJ;AAgBH;;AA1B6B;;AA6BlC,eAAed,GAAf","sourcesContent":["import React from 'react';\nimport styles from './App.module.css';\nimport axios from \"axios\";\nimport {Card} from \"semantic-ui-react\";\nimport ProductCard from \"./Components/Basket/BasketContainer\";\nimport Preloader from \"./Common/Preloader/Preloader\";\nimport Header from \"./Components/Header/Header\";\n\n\nclass App extends React.Component {\n    componentWillMount() {\n        axios.get('/productsJson.json').then(({data}) => {\n            this.props.setProducts(data)\n        })\n    }\n\n    render() {\n        const {products, isLoading} = this.props\n\n        return (\n            <div className={styles.appWrapper}>\n                <Header/>\n                <div className={styles.appArticle}>\n                    <Card.Group itemsPerRow={4}>\n                        {!isLoading\n                            ? <Preloader/>\n                            : products.map((product, i) => <ProductCard className={styles.ProductCard}\n                                                                        key={i} {...product}/>\n                            )\n                        }\n                    </Card.Group>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}